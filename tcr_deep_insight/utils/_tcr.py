from Bio import SeqIO
from pathlib import Path


MODULE_PATH = Path(__file__).parent
IMGT_TRAV = [r.id.split('|')[1] for r in SeqIO.parse( MODULE_PATH / "../data/imgt/TRAV.fasta", "fasta")]
IMGT_TRAJ = [r.id.split('|')[1] for r in SeqIO.parse( MODULE_PATH / "../data/imgt/TRAJ.fasta", "fasta")]
IMGT_TRBV = [r.id.split('|')[1] for r in SeqIO.parse( MODULE_PATH / "../data/imgt/TRBV.fasta", "fasta")]
IMGT_TRBD = [r.id.split('|')[1] for r in SeqIO.parse( MODULE_PATH / "../data/imgt/TRBD.fasta", "fasta")]
IMGT_TRBJ = [r.id.split('|')[1] for r in SeqIO.parse( MODULE_PATH / "../data/imgt/TRBJ.fasta", "fasta")]
IMGT_VJ_GENES = IMGT_TRAV + IMGT_TRAJ + IMGT_TRBV + IMGT_TRBJ

TRBV_CDR3_REGION_SEQUENCE = {
    'TRBV1': 'CTSSQ',
    'TRBV2': 'CASSE',
    'TRBV3-1': 'CASSQ',
    'TRBV3-2': 'CASSQ',
    'TRBV4-1': 'CASSQ',
    'TRBV4-2': 'CASSQ',
    'TRBV4-3': 'CASSQ',
    'TRBV5-1': 'CASSL',
    'TRBV5-3': 'CARSL',
    'TRBV5-4': 'CASSL',
    'TRBV5-5': 'CASSL',
    'TRBV5-6': 'CASSL',
    'TRBV5-7': 'CASSL',
    'TRBV5-8': 'CASSL',
    'TRBV6-1': 'CASSE',
    'TRBV6-2': 'CASSY',
    'TRBV6-3': 'CASSY',
    'TRBV6-4': 'CASSD',
    'TRBV6-5': 'CASSY',
    'TRBV6-6': 'CASSY',
    'TRBV6-7': 'CASSY',
    'TRBV6-8': 'CASSY',
    'TRBV6-9': 'CASSY',
    'TRBV7-1': 'CASSS',
    'TRBV7-2': 'CASSL',
    'TRBV7-3': 'CASSL',
    'TRBV7-4': 'CASSL',
    'TRBV7-6': 'CASSL',
    'TRBV7-7': 'CASSL',
    'TRBV7-8': 'CASSL',
    'TRBV7-9': 'CASSL',
    'TRBV9': 'CASSV',
    'TRBV10-1': 'CASSE',
    'TRBV10-2': 'CASSE',
    'TRBV10-3': 'CAISE',
    'TRBV11-1': 'CASSL',
    'TRBV11-2': 'CASSL',
    'TRBV11-3': 'CASSL',
    'TRBV12-1': 'CASSF',
    'TRBV12-2': 'CASRL',
    'TRBV12-3': 'CASSL',
    'TRBV12-4': 'CASSL',
    'TRBV12-5': 'CASGL',
    'TRBV13': 'CASSL',
    'TRBV14': 'CASSQ',
    'TRBV15': 'CATSR',
    'TRBV16': 'CASSQ',
    'TRBV17': 'YSSG',
    'TRBV18': 'CASSP',
    'TRBV19': 'CASSI',
    'TRBV20': 'CSAR',
    'TRBV20-1': 'CSAR',
    'TRBV21-1': 'CASSK',
    'TRBV23-1': 'CASSQ',
    'TRBV24-1': 'CATSDL',
    'TRBV25-1': 'CASSE',
    'TRBV26': 'YASSS',
    'TRBV27': 'CASSL',
    'TRBV28': 'CASSL',
    'TRBV29-1': 'CSVE',
    'TRBV30': 'CAWS'
}


TRBJ_CDR3_REGION_SEQUENCE = {
    'TRBJ1-1': 'NTEAFFGQGTRLTVV',
    'TRBJ1-2': 'NYGYTFGSGTRLTVV',
    'TRBJ1-3': 'SGNTIYFGEGSWLTVV',
    'TRBJ1-4': 'TNEKLFFGSGTQLSVL',
    'TRBJ1-5': 'SNQPQHFGDGTRLSIL',
    'TRBJ1-6': 'SYNSPLHFGNGTRLTVT',
    'TRBJ2-1': 'SYNEQFFGPGTRLTVL',
    'TRBJ2-2': 'NTGELFFGEGSRLTVL',
    'TRBJ2-3': 'STDTQYFGPGTRLTVL',
    'TRBJ2-4': 'AKNIQYFGAGTRLSVL',
    'TRBJ2-5': 'QETQYFGPGTRLLVL',
    'TRBJ2-6': 'SGANVLTFGAGSRLTVL',
    'TRBJ2-7': 'SYEQYFGPGTRLTVT'
}
TRAV_CDR3_REGION_SEQUENCE = {
'TRAV1-1': 'CAVR',
'TRAV1-2': 'CAVR',
'TRAV2': 'CAVE',
'TRAV3': 'CAVRD',
'TRAV4': 'CLVGD',
'TRAV5': 'CAES',
'TRAV6': 'CALD',
'TRAV7': 'CAVD',
'TRAV8-1': 'CAVN',
'TRAV8-2': 'CVVS',
'TRAV8-3': 'CAVG',
'TRAV8-4': 'CAVS',
'TRAV8-6': 'CAVS',
'TRAV8-7': 'CAVG',
'TRAV9-1': 'CALS',
'TRAV9-2': 'CALS',
'TRAV10': 'CVVS',
'TRAV11': 'CAL',
'TRAV12-1': 'CVVN',
'TRAV12-2': 'CAVN',
'TRAV12-3': 'CAMS',
'TRAV13-1': 'CAAS',
'TRAV13-2': 'CAEN',
'TRAV14DV4': 'CAMRE',
'TRAV16': 'CALS',
'TRAV17': 'CATD',
'TRAV18': 'CALR',
'TRAV19': 'CALSE',
'TRAV20': 'CAVQ',
'TRAV21': 'CAVR',
'TRAV22': 'CAVE',
'TRAV23DV6': 'CAAS',
'TRAV24': 'CAF',
'TRAV25': 'CAG',
'TRAV26-1': 'CIVRV',
'TRAV26-2': 'CILRD',
'TRAV27': 'CAG',
'TRAV29DV5': 'CAAS',
'TRAV30': 'CGTE',
'TRAV34': 'CGAD',
'TRAV35': 'CAGQ',
'TRAV36DV7': 'CAVE',
'TRAV38-1': 'CAFMK',
'TRAV38-2DV8': 'CAYRS',
'TRAV39': 'CAVD',
'TRAV40': 'CLLG',
'TRAV41': 'CAVR'
}


TRAJ_CDR3_REGION_SEQUENCE = {
    'TRAJ1': 'YESITSQLQFGKGTRVSTSP',
    'TRAJ2': 'NTGGTIDKLTFGKGTHVFIIS',
    'TRAJ3': 'GYSSASKIIFGSGTRLSIRP',
    'TRAJ4': 'FSGGYNKLIFGAGTRLAVHP',
    'TRAJ5': 'DTGRRALTFGSGTRLQVQP',
    'TRAJ6': 'ASGGSYIPTFGRGTSLIVHP',
    'TRAJ7': 'DYGNNRLAFGKGNQVVVIP',
    'TRAJ8': 'NTGFQKLVFGTGTRLLVSP',
    'TRAJ9': 'GNTGGFKTIFGAGTRLFVKA',
    'TRAJ10': 'ILTGGGNKLTFGTGTQLKVEL',
    'TRAJ11': 'NSGYSTLTFGKGTMLLVSP',
    'TRAJ12': 'MDSSYKLIFGSGTRLLVRP',
    'TRAJ13': 'NSGGYQKVTFGIGTKLQVIP',
    'TRAJ14': 'IYSTFIFGSGTRLSVKP',
    'TRAJ15': 'NQAGTALIFGKGTTLSVSS',
    'TRAJ16': 'FSDGQKLLFARGTMLKVDL',
    'TRAJ17': 'IKAAGNKLTFGGGTRVLVKP',
    'TRAJ18': 'DRGSTLGRLYFGRGTQLTVWP',
    'TRAJ19': 'YQRFYNFTFGKGSKHNVTP',
    'TRAJ20': 'SNDYKLSFGAGTTVTVRA',
    'TRAJ21': 'YNFNKFYFGSGTKLNVKP',
    'TRAJ22': 'SSGSARQLTFGSGTQLTVLP',
    'TRAJ23': 'IYNQGGKLIFGQGTELSVKP',
    'TRAJ24': 'TTDSWGKFEFGAGTQVVVTP',
    'TRAJ25': 'EGQGFSFIFGKGTRLLVKP',
    'TRAJ26': 'DNYGQNFVFGPGTRLSVLP',
    'TRAJ27': 'NTNAGKSTFGDGTTLTVKP',
    'TRAJ28': 'YSGAGSYQLTFGKGTKLSVIP',
    'TRAJ29': 'NSGNTPLVFGKGTRLSVIA',
    'TRAJ30': 'NRDDKIIFGKGTRLHILP',
    'TRAJ31': 'NNNARLMFGDGTQLVVKP',
    'TRAJ32': 'NYGGATNKLIFGTGTLLAVQP',
    'TRAJ33': 'DSNYQLIWGAGTKLIIKP',
    'TRAJ34': 'SYNTDKLIFGTGTRLQVFP',
    'TRAJ35': 'IGFGNVLHCGSGTQVIVLP',
    'TRAJ36': 'QTGANNLFFGTGTRLTVIP',
    'TRAJ37': 'GSGNTGKLIFGQGTTLQVKP',
    'TRAJ38': 'NAGNNRKLIWGLGTSLAVNP',
    'TRAJ39': 'NNNAGNMLTFGGGTRLMVKP',
    'TRAJ40': 'TTSGTYKYIFGTGTRLKVLA',
    'TRAJ41': 'NSNSGYALNFGKGTSLLVTP',
    'TRAJ42': 'NYGGSQGNLIFGKGTKLSVKP',
    'TRAJ43': 'NNNDMRFGAGTRLTVKP',
    'TRAJ44': 'NTGTASKLTFGTGTRLQVTL',
    'TRAJ45': 'YSGGGADGLTFGKGTHLIIQP',
    'TRAJ46': 'KKSSGDKLTFGTGTRLAVRP',
    'TRAJ47': 'EYGNKLVFGAGTILRVKS',
    'TRAJ48': 'SNFGNEKLTFGTGTRLTIIP',
    'TRAJ49': 'NTGNQFYFGTGTSLTVIP',
    'TRAJ50': 'KTSYDKVIFGPGTSLSVIP',
    'TRAJ51': 'MRDSYEKLIFGKET*LTVKP',
    'TRAJ52': 'NAGGTSYGKLTFGQGTILTVHP',
    'TRAJ53': 'NSGGSNYKLTFGKGTLLTVNP',
    'TRAJ54': 'IQGAQKLVFGQGTRLTINP',
    'TRAJ55': 'KCW*CSCWGKGMSTKINP',
    'TRAJ56': 'YTGANSKLTFGKGITLSVRP',
    'TRAJ57': 'TQGGSEKLVFGKGTKLTVNP',
    'TRAJ58': '*ETSGSRLTFGEGTQLTVNP',
    'TRAJ59': 'KEGNRKFTFGMGTQVRVKL',
    'TRAJ60': 'KIT*MLNFGKGTELIVSL',
    'TRAJ61': 'YRVNRKLTFGANTRGIMKL',
}

VJ_GENES = list(TRAV_CDR3_REGION_SEQUENCE.keys()) + list(TRAJ_CDR3_REGION_SEQUENCE.keys()) + list(TRBV_CDR3_REGION_SEQUENCE.keys()) + list(TRBJ_CDR3_REGION_SEQUENCE.keys())

TRAV_GENES = list(filter(lambda x: x.startswith("TRAV"), VJ_GENES))
TRAJ_GENES = list(filter(lambda x: x.startswith("TRAJ"), VJ_GENES))
TRBV_GENES = list(filter(lambda x: x.startswith("TRBV"), VJ_GENES))
TRBJ_GENES = list(filter(lambda x: x.startswith("TRBJ"), VJ_GENES))

VJ_GENES2INDEX = dict(zip(VJ_GENES, range(len(VJ_GENES))))
VJ_GENES2INDEX_REVERSE = {v:k for k,v in VJ_GENES2INDEX.items()}
